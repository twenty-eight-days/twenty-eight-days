{"version":3,"sources":["theme/actions.ts","theme/model.ts","theme/defaults.ts","theme/components/ThemeSwitch.tsx","theme/containers/ThemeSwitch.tsx","theme/reducer.ts","db/default.ts","cycle/actions.ts","cycle/actionTypes.ts","db/actionTypes.ts","cycle/reducer.ts","cycle/default.ts","db/model.ts","db/reducer.ts","db/containers/DataProvider.tsx","store/useTypedSelector.ts","store/useTypedDispatch.ts","cycle/components/CycleDescription.tsx","cycle/components/shared.ts","cycle/components/CycleDurationHistogram.tsx","cycle/components/CycleBarChart.tsx","cycle/components/CycleStats.tsx","cycle/components/NotEnoughData.tsx","cycle/containers/CycleStats.tsx","store/default.ts","store/reducer.ts","store/store.ts","cycle/components/CycleAdd.tsx","cycle/components/CycleData.tsx","cycle/containers/CycleData.tsx","db/components/LoginForm.tsx","db/containers/LoginForm.tsx","cycle/components/ExportCycleData.tsx","cycle/containers/ExportCycleData.tsx","db/actions.ts","store/index.ts","db/userbase.ts","db/index.ts","app/components/Progress.tsx","app/components/Main.tsx","app/containers/Main.tsx","app/components/App.tsx","app/containers/App.tsx","serviceWorker.ts","index.tsx","cycle/index.ts","cycle/utils.ts"],"names":["toggleTheme","type","lightTheme","createMuiTheme","palette","darkTheme","defaultThemeState","useStyles","makeStyles","root","display","gridTemplateColumns","alignItems","icon","margin","ThemeSwitch","theme","onToggleTheme","classes","className","Switch","checked","onChange","color","useTypedSelector","s","dispatch","useTypedDispatch","themeReducer","state","action","query","URLSearchParams","window","location","search","isSignUp","has","appId","get","process","REACT_APP_USERBASE_APP_ID","defaultDatabaseState","authState","demoDatabaseState","user","demoUser","dataLoading","updateCycles","cycles","UPDATE_CYCLES","exportCycleData","data","blob","Blob","JSON","stringify","today","format","Date","valueOf","FileSaver","saveAs","UPDATE_AUTH_STATE","cycleReducer","length","history","rawCycles","latestRawCycle","currentCycle","id","startDate","duration","differenceInDays","startOfToday","pastCycles","flatMap","rawCycle","index","from","to","Math","abs","cycleHistory","sort","a","b","compareDesc","defaultCycleState","CycleIdBrand","dbReducer","DataProvider","children","loginState","database","useDispatch","useEffect","console","debug","userbase","init","then","session","loginSuccessful","showLoginForm","catch","error","dbInitFailed","databaseName","cycleDatabaseName","log","dataLoadingInProgress","openDatabase","changeHandler","items","startDates","map","i","itemId","item","dataLoadingDone","err","useSelector","userName","textTransform","CycleDescription","currentDay","median","lastStartDate","expectedStartDate","addDays","expectedStart","isBefore","dateWithWeekDay","Typography","variant","align","dateWithoutWeekDay","fd","date","width","height","justifyItems","bar","fill","lighten","primary","main","strokeWidth","stroke","background","default","dot","secondary","line","text","textAnchor","fontSize","dominantBaseline","CycleDurationHistogram","cycleDurations","c","binMin","min","binMax","max","x","scaleLinear","domain","range","bins","histogram","thresholds","ticks","y","d","nice","binWidth","currentDayBin","undefined","medianX","viewBox","x1","x2","y1","marginTop","y2","marginBottom","h","key","x0","cx","cy","r","label","CycleBarChart","barWidth","useTheme","reverse","toAxisLabel","currentDuration","pastDuration","medianMarker","axis","value","lineStyle","keys","colors","layout","padding","enableGridY","isInteractive","layers","labels","bars","barDatum","transform","top","right","bottom","left","textColor","markers","endDate","gridGap","spacing","CycleStats","useDividerStyles","container","border","borderBottom","content","paddingTop","paddingBottom","paddingRight","paddingLeft","fontWeight","whiteSpace","Divider","NotEnoughData","useState","setToday","useInterval","cycle","username","values","mid","floor","nums","daysPast","day","defaultRootState","isDemoMode","rootReducer","configureStore","createStore","composeWithDevTools","applyMiddleware","thunk","actions","CycleAdd","onAdd","selectedDate","handleDateChange","isValid","setValid","Card","CardContent","dateAdapter","DateFnsAdapter","locale","deLocale","onError","e","renderInput","props","TextField","mask","disableFuture","showTodayButton","autoOk","CardActions","Button","disabled","onClick","list","CycleData","onDelete","List","ListItem","ListItemText","f","ListItemSecondaryAction","IconButton","edge","aria-label","addStartDate","deleteStartDate","gridTemplateRows","gridRowGap","button","minHeight","LoginForm","onSubmit","setAppId","REACT_APP_USERBASE_USERNAME","setUsername","REACT_APP_USERBASE_PASSWORD","password","setPassword","isSubmitted","isInvalidCredentials","field","noValidate","autoComplete","preventDefault","fullWidth","event","target","trim","CircularProgress","size","isDbInitialized","setDbInitialized","credentials","setCredentials","loginFormError","signOut","signUp","signIn","loginFormSubmitted","ExportCycleData","cycleState","exportableData","updateAuthState","updateLoginForm","insertItem","deleteItem","userId","authToken","creationDate","paymentsMode","DemoUserbase","this","Promise","resolve","params","find","newItems","toString","filter","p","demoDateString","parse","DATE_FORMAT_IMPORT_EXPORT","demoDataCreationDate","daysToAdd","parsedDate","d1","d2","userbaseDB","startsWith","Progress","bottomNav","position","progress","justifySelf","Main","navTab","setNavTab","BottomNavigation","newValue","showLabels","BottomNavigationAction","appBar","toolbar","toolbarLeft","marginRight","toolbarCenter","pointerEvents","breakpoints","down","visibility","title","contrastText","toolbarRight","marginLeft","App","AppBar","Toolbar","ThemeProvider","CssBaseline","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","Root","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","options","enLocale"],"mappings":"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","file":"static/js/main.27ae5fca.chunk.js","sourcesContent":["export const TOGGLE_THEME = 'theme/TOGGLE_THEME'\n\nexport type ThemeAction = ToggleThemeAction\n\nexport interface ToggleThemeAction {\n  readonly type: typeof TOGGLE_THEME\n}\n\nexport const toggleTheme = (): ToggleThemeAction => {\n  return {\n    type: TOGGLE_THEME\n  }\n}\n","import { createMuiTheme, Theme } from '@material-ui/core'\n\nexport type ThemeState = Theme\n\nexport const lightTheme: Theme = createMuiTheme({\n  palette: {\n    type: 'light'\n  }\n})\n\nexport const darkTheme: Theme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  }\n})\n","import { Theme } from '@material-ui/core'\nimport { lightTheme } from './model'\n\nexport const defaultThemeState: Theme = lightTheme\n","import DarkThemeIcon from '@material-ui/icons/Brightness2'\nimport LightThemeIcon from '@material-ui/icons/WbSunny'\nimport * as React from 'react'\nimport { Switch, Theme } from '@material-ui/core'\nimport { darkTheme } from '../model'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    alignItems: 'center'\n  },\n  icon: {\n    margin: 4\n  }\n})\n\nexport interface Props {\n  readonly theme: Theme\n  readonly onToggleTheme: () => void\n}\n\nexport const ThemeSwitch = ({ theme, onToggleTheme }: Props) => {\n  const classes = useStyles(theme)\n  return (\n    <div className={classes.root}>\n      <LightThemeIcon className={classes.icon} />\n      <Switch checked={theme === darkTheme} onChange={onToggleTheme} color={'default'} />\n      <DarkThemeIcon className={classes.icon} />\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { ThemeSwitch as ThemeSwitchComp } from '../components/ThemeSwitch'\nimport { ThemeAction, toggleTheme } from '../index'\nimport { useTypedDispatch, useTypedSelector } from '../../store'\nimport { Theme } from '@material-ui/core'\n\nexport const ThemeSwitch = () => {\n  const theme = useTypedSelector<Theme>((s) => s.theme)\n  const dispatch = useTypedDispatch<ThemeAction>()\n  const onToggleTheme = () => dispatch(toggleTheme())\n  return <ThemeSwitchComp theme={theme} onToggleTheme={onToggleTheme} />\n}\n","import { ThemeAction, TOGGLE_THEME } from './actions'\nimport { darkTheme, lightTheme, ThemeState } from './model'\n\nexport const themeReducer = (state: ThemeState, action: ThemeAction): ThemeState => {\n  if (action.type === TOGGLE_THEME) {\n    return state.palette.type === 'light' ? darkTheme : lightTheme\n  } else {\n    return state\n  }\n}\n","import { DatabaseState } from './model'\nimport { demoUser } from './userbase'\n\nconst query = new URLSearchParams(window.location.search)\nexport const isSignUp = query.has('signUp')\n\nconst appId = query.get('appId') || process.env.REACT_APP_USERBASE_APP_ID\n\nexport const defaultDatabaseState = (): DatabaseState => {\n  if (!isSignUp && appId) {\n    return {\n      authState: {\n        type: 'attempt-auto-login',\n        appId,\n      },\n    }\n  } else {\n    return {\n      authState: {\n        type: 'login-form',\n        state: {\n          type: 'login-form-idle',\n        },\n      },\n    }\n  }\n}\n\nexport const demoDatabaseState: DatabaseState = {\n  authState: {\n    type: 'logged-in',\n    user: demoUser,\n    dataLoading: 'pending',\n  },\n}\n","import FileSaver from 'file-saver'\nimport { CycleIOData, RawCycle } from './model'\nimport { UPDATE_CYCLES } from './actionTypes'\nimport format from 'date-fns/format'\n\nexport type CycleAction = UpdateCyclesAction\n\ninterface UpdateCyclesAction {\n  type: typeof UPDATE_CYCLES\n  cycles: ReadonlyArray<RawCycle>\n}\n\nexport const updateCycles = (cycles: ReadonlyArray<RawCycle>): UpdateCyclesAction => ({\n  type: UPDATE_CYCLES,\n  cycles,\n})\n\nexport const exportCycleData = (data: CycleIOData) => () => {\n  const blob = new Blob([JSON.stringify(data)], { type: 'text/json;charset=utf-8' })\n  const today = format(new Date().valueOf(), 'yyyyMMdd')\n  FileSaver.saveAs(blob, `cycle-data-${today}.json`)\n}\n","export const UPDATE_CYCLES = 'cycle/UPDATE_CYCLES'\n","export const UPDATE_AUTH_STATE = 'db/UPDATE_AUTH_STATE'\n","import { CycleHistory, CycleState, PastCycle, RawCycle } from './model'\nimport { CycleAction } from './actions'\nimport { UPDATE_CYCLES } from './actionTypes'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport startOfToday from 'date-fns/startOfToday'\nimport { compareDesc } from 'date-fns'\n\nexport const cycleReducer = (state: CycleState, action: CycleAction): CycleState => {\n  switch (action.type) {\n    case UPDATE_CYCLES: {\n      if (action.cycles.length > 0) {\n        const startDates = [...action.cycles].sort((a, b) => compareDesc(a.startDate, b.startDate))\n        const history = cycleHistory(startDates)\n        return {\n          ...state,\n          history,\n        }\n      } else {\n        return state\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport function cycleHistory(rawCycles: ReadonlyArray<RawCycle>): CycleHistory {\n  const latestRawCycle = rawCycles[0]\n  return {\n    currentCycle: {\n      id: latestRawCycle.id,\n      startDate: latestRawCycle.startDate,\n      duration: differenceInDays(startOfToday(), latestRawCycle.startDate),\n      type: 'current',\n    },\n    pastCycles: rawCycles.flatMap<PastCycle>((rawCycle, index, rawCycles) => {\n      if (index > 0) {\n        const from = rawCycles[index - 1].startDate\n        const to = rawCycle.startDate\n        const duration = Math.abs(differenceInDays(from, to))\n        return [\n          {\n            ...rawCycle,\n            type: 'past',\n            duration,\n          },\n        ]\n      } else {\n        return []\n      }\n    }),\n  }\n}\n","import { CycleState } from './model'\n\nexport const defaultCycleState: CycleState = {}\n","import { UserResult } from 'userbase-js'\n\n/* ·················································································································· */\n/*  Redux State\n/* ·················································································································· */\n\nexport interface DatabaseState {\n  readonly authState: AuthState\n}\n\nexport type AuthState = AttemptAutoLogin | DisplayLoginForm | DbInitFailed | LoginState\n\nexport interface AttemptAutoLogin {\n  type: 'attempt-auto-login'\n  appId: string\n}\n\nexport interface DisplayLoginForm {\n  type: 'login-form'\n  state: LoginFormState\n}\n\nexport type LoginFormState = LoginFormIdle | LoginFormSubmitted | LoginFormError\n\nexport interface LoginFormIdle {\n  type: 'login-form-idle'\n}\n\nexport interface LoginFormSubmitted {\n  type: 'login-form-submitted'\n}\n\nexport type LoginFormField = 'appId' | 'credentials'\n\nexport interface LoginFormError {\n  type: 'login-form-error'\n  field: LoginFormField\n  error: string\n}\n\nexport interface LoginState {\n  type: 'logged-in'\n  user: UserResult\n  dataLoading: 'pending' | 'in-progress' | 'done'\n}\n\nexport interface DbInitFailed {\n  type: 'db-init-failed'\n  error: any\n}\n\n/* ·················································································································· */\n/*  Userbase IDs\n/* ·················································································································· */\n\nenum CycleIdBrand {}\n\nexport type CycleId = CycleIdBrand & string\n","import { DatabaseState } from './model'\nimport { DatabaseAction } from './actions'\nimport { UPDATE_AUTH_STATE } from './actionTypes'\n\nexport const dbReducer = (state: DatabaseState, action: DatabaseAction): DatabaseState => {\n  switch (action.type) {\n    case UPDATE_AUTH_STATE:\n      return {\n        ...state,\n        authState: action.authState,\n      }\n    default:\n      return state\n  }\n}\n","import { ReactElement, useEffect } from 'react'\nimport { useTypedSelector } from '../../store'\nimport { useDispatch } from 'react-redux'\nimport { RawCycle, updateCycles } from '../../cycle'\nimport {\n  cycleDatabaseName,\n  dataLoadingDone,\n  dataLoadingInProgress,\n  dbInitFailed,\n  loginSuccessful,\n  showLoginForm,\n} from '../actions'\nimport { CycleId } from '../model'\nimport { Item, userbase } from '../userbase'\nimport { Session } from 'userbase-js'\n\ninterface Props {\n  children: ReactElement\n}\n\nexport const DataProvider = ({ children }: Props) => {\n  const loginState = useTypedSelector((s) => s.database.authState)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (loginState.type === 'attempt-auto-login') {\n      console.debug('Attempting DB auto-login...')\n      userbase\n        .init({ appId: loginState.appId })\n        .then((session: Session) => {\n          if (session.user) {\n            console.debug('DB auto-login successful')\n            dispatch(loginSuccessful(session.user))\n          } else {\n            dispatch(showLoginForm())\n          }\n        })\n        .catch((error) => {\n          console.debug('DB init with auto-login failed: ' + error)\n          dispatch(dbInitFailed(error))\n        })\n    } else if (loginState.type === 'logged-in' && loginState.dataLoading === 'pending') {\n      const databaseName = cycleDatabaseName(loginState)\n      console.log(`DB openDatabase ${databaseName} ...`)\n      dispatch(dataLoadingInProgress(loginState.user))\n      userbase\n        .openDatabase({\n          databaseName,\n          changeHandler: (items: ReadonlyArray<Item>) => {\n            const startDates = items.map<RawCycle>((i) => ({\n              id: i.itemId as CycleId,\n              startDate: i.item,\n            }))\n            dispatch(updateCycles(startDates))\n            dispatch(dataLoadingDone(loginState.user))\n          },\n        })\n        .then(() => {\n          console.log(`DB openDatabase ${databaseName} successful`)\n        })\n        .catch((err) => {\n          console.log(`DB openDatabase ${databaseName} failed ${err}`)\n          dispatch(dataLoadingDone(loginState.user))\n        })\n    }\n  }, [loginState, dispatch])\n\n  return children\n}\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\nimport { RootState } from './model'\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { useDispatch } from 'react-redux'\nimport { RootAction } from './actions'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { RootState } from './model'\n\nexport const useTypedDispatch = <A extends RootAction>() => useDispatch<ThunkDispatch<RootState, {}, A>>()\n","import * as React from 'react'\nimport { Typography } from '@material-ui/core'\nimport { dateWithoutWeekDay, dateWithWeekDay } from '../utils'\nimport addDays from 'date-fns/addDays'\nimport { isBefore } from 'date-fns'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  userName: {\n    textTransform: 'capitalize',\n  },\n})\n\ninterface Props {\n  readonly userName: string\n  readonly currentDay: number\n  readonly median: number\n  readonly lastStartDate: number\n}\n\nexport const CycleDescription = ({ userName, currentDay, median, lastStartDate }: Props) => {\n  const classes = useStyles()\n  const expectedStartDate = addDays(lastStartDate, median - 1).valueOf()\n  const expectedStart = isBefore(expectedStartDate, new Date()) ? (\n    <b>{'today'}</b>\n  ) : (\n    <div>\n      {'on '}\n      <b>{dateWithWeekDay(expectedStartDate)}</b>\n    </div>\n  )\n\n  return (\n    <div>\n      <Typography variant={'body1'} align={'center'}>\n        Hey <span className={classes.userName}>{userName}</span> – today is {dateWithWeekDay(new Date().valueOf())}\n      </Typography>\n      <Typography variant={'h1'} align={'center'}>\n        {currentDay}\n      </Typography>\n      <Typography variant={'body1'} align={'center'}>\n        days since your last period, which started on {dateWithoutWeekDay(lastStartDate)}.\n      </Typography>\n      <br />\n      <Typography variant={'body1'} align={'center'}>\n        Your next period is expected {expectedStart}.\n      </Typography>\n    </div>\n  )\n}\n","import { format } from 'date-fns'\n\nexport const barLighteningCoefficient = 0.5\nexport const fd = (date: number | Date) => format(date, 'dd.MM.yyyy')\n","import React from 'react'\nimport { histogram, max, min } from 'd3-array'\nimport { scaleLinear } from 'd3-scale'\nimport { lighten, makeStyles, Theme } from '@material-ui/core/styles'\nimport { CycleHistory } from '../model'\nimport { barLighteningCoefficient } from './shared'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'grid',\n    width: '100%',\n    height: '100%',\n    justifyItems: 'center',\n  },\n  bar: {\n    fill: lighten(theme.palette.primary.main, barLighteningCoefficient),\n    strokeWidth: 1,\n    stroke: theme.palette.background.default,\n  },\n  dot: {\n    fill: theme.palette.secondary.main,\n  },\n  line: {\n    stroke: theme.palette.text.primary,\n    strokeWidth: 1,\n  },\n  text: {\n    fill: theme.palette.text.primary,\n    textAnchor: 'middle',\n    fontSize: 9,\n    dominantBaseline: 'central',\n  },\n}))\n\ninterface Props {\n  readonly width: number\n  readonly height: number\n  readonly currentDay: number\n  readonly median: number\n  readonly cycleHistory: CycleHistory\n}\n\nexport const CycleDurationHistogram = ({ width, height, currentDay, median, cycleHistory }: Props) => {\n  const classes = useStyles()\n\n  const marginTop = 10\n  const marginBottom = 20\n\n  const cycleDurations = cycleHistory.pastCycles.map((c) => c.duration)\n\n  const binMin = min(cycleDurations) ?? 20\n  const binMax = max(cycleDurations) ?? 35\n\n  const x = scaleLinear()\n    .domain([binMin, binMax + 1])\n    .range([0, width])\n  const bins = histogram().thresholds(x.ticks(binMax - binMin))(cycleDurations)\n\n  const y = scaleLinear()\n    .domain([0, max(bins, (d) => d.length) ?? 0])\n    .nice()\n    .range([height - marginBottom, marginTop])\n\n  const binWidth = width / bins.length\n  const currentDayBin = currentDay >= binMin ? bins[currentDay - binMin] : undefined\n\n  const medianX = x(median + 0.5)\n\n  return (\n    <div className={classes.root}>\n      <svg viewBox={`0 0 ${width} ${height}`} width={width} height={height}>\n        <line\n          className={classes.line}\n          x1={medianX}\n          x2={medianX}\n          y1={marginTop / 2}\n          y2={height - marginBottom / 2 - 5}\n        />\n        <text className={classes.text} x={medianX} y={height - marginBottom / 2}>\n          {median}\n        </text>\n        {bins.map((b, i) => {\n          const h = y(0) - y(b.length)\n          return (\n            <rect key={`bin-${i}`} className={classes.bar} x={x(b.x0!)} y={y(b.length)} width={binWidth} height={h} />\n          )\n        })}\n        {currentDayBin && (\n          <circle\n            className={classes.dot}\n            cx={x(currentDay + 0.5)}\n            cy={y(currentDayBin.length) - binWidth / 2}\n            r={binWidth / 3}\n            strokeWidth={0}\n          />\n        )}\n      </svg>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Cycle, CycleHistory } from '../model'\nimport { BarDatum, BarItemProps, ResponsiveBar } from '@nivo/bar'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport { barLighteningCoefficient, fd } from './shared'\nimport { Theme, useTheme } from '@material-ui/core'\nimport { addDays } from 'date-fns'\nimport { CartesianMarkerProps } from '@nivo/core'\n\ninterface CycleBarDatum {\n  readonly id: string\n  readonly currentDuration: number\n  readonly pastDuration: number\n}\n\nconst fontSize = 9\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: (height: number) => ({ width: '100%', height }),\n  label: {\n    fill: theme.palette.text.primary,\n    dominantBaseline: 'central',\n    fontSize,\n  },\n}))\n\nconst barWidth = 15\nconst barPadding = 0.2\nconst labelPadding = -12\n\ninterface Props {\n  readonly cycleHistory: CycleHistory\n  readonly median: number\n}\n\nexport const CycleBarChart = ({ cycleHistory, median }: Props) => {\n  const pastCycles = cycleHistory.pastCycles\n  const height = barWidth * (1 + barPadding) * pastCycles.length\n  const classes = useStyles(height)\n  const theme = useTheme()\n\n  const cycles = [cycleHistory.currentCycle, ...pastCycles].reverse().map<CycleBarDatum>((c) => ({\n    id: toAxisLabel(c),\n    currentDuration: c.type === 'current' ? c.duration + 1 : 0,\n    pastDuration: c.type === 'past' ? c.duration : 0,\n  }))\n\n  const currentCycleLabel = ({ bars }: { bars: BarItemProps[] }) => {\n    const labels = bars.map(({ data, x, y, width, height }) => {\n      const barDatum: BarDatum = data.data\n      return (\n        <text\n          className={classes.label}\n          key={`${data.id}/${data.index}`}\n          x={x}\n          y={y}\n          transform={`translate(${width + labelPadding},${height / 2})`}\n        >\n          {data.id === 'currentDuration' && data.index === cycles.length - 1 ? barDatum.currentDuration : ''}\n          {data.id === 'pastDuration' && data.index <= cycles.length ? barDatum.pastDuration : ''}\n        </text>\n      )\n    })\n    return <g>{labels}</g>\n  }\n\n  const medianMarker: CartesianMarkerProps = {\n    axis: 'x',\n    value: median,\n    lineStyle: { stroke: theme.palette.secondary.main, strokeWidth: 0.5 },\n  }\n\n  return (\n    <div className={classes.root}>\n      <ResponsiveBar\n        data={cycles}\n        keys={['currentDuration', 'pastDuration']}\n        colors={['lavender', lighten(theme.palette.primary.main, barLighteningCoefficient)]}\n        layout={'horizontal'}\n        padding={barPadding}\n        enableGridY={false}\n        isInteractive={false} // disable tooltips\n        layers={['markers', 'axes', 'bars', currentCycleLabel]}\n        margin={{ top: 0, right: 0, bottom: 0, left: 115 }}\n        label={() => ''} // disable default labels\n        theme={{ fontSize, textColor: theme.palette.text.primary }}\n        markers={[medianMarker]}\n      />\n    </div>\n  )\n}\n\nfunction toAxisLabel(c: Cycle) {\n  const startDate = fd(c.startDate)\n  switch (c.type) {\n    case 'past':\n      const endDate = fd(addDays(c.startDate, c.duration))\n      return `${startDate} - ${endDate}`\n    default:\n      return `${startDate} - __.__.____`\n  }\n}\n","import { CycleDescription } from './CycleDescription'\nimport * as React from 'react'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\nimport { CycleHistory } from '../model'\nimport { CycleDurationHistogram } from './CycleDurationHistogram'\nimport { CycleBarChart } from './CycleBarChart'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'grid',\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyItems: 'center',\n    gridGap: theme.spacing(1),\n  },\n}))\n\ninterface Props {\n  readonly userName: string\n  readonly currentDay: number\n  readonly median: number\n  readonly lastStartDate: number\n  readonly cycleHistory: CycleHistory\n}\n\nexport const CycleStats = ({ userName, currentDay, median, lastStartDate, cycleHistory }: Props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CycleDescription userName={userName} currentDay={currentDay} median={median} lastStartDate={lastStartDate} />\n      <Divider text={'Past Cycles'} />\n      <Typography variant={'body1'} align={'center'}>\n        Your <b>median cycle</b> length is {median} days.\n      </Typography>\n      <CycleBarChart cycleHistory={cycleHistory} median={median} />\n      <Divider text={'Duration Histogram'} />\n      <CycleDurationHistogram\n        width={200}\n        height={150}\n        currentDay={currentDay}\n        median={median}\n        cycleHistory={cycleHistory}\n      />\n    </div>\n  )\n}\n\n// https://stackoverflow.com/questions/61730527/react-create-a-horizontal-divider-with-text-in-between\n\nconst useDividerStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    width: '100%',\n    alignItems: 'center',\n    marginTop: 12,\n  },\n  border: {\n    borderBottom: '2px solid lightgray',\n    width: '100%',\n  },\n  content: {\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    paddingRight: theme.spacing(2),\n    paddingLeft: theme.spacing(2),\n    fontWeight: 500,\n    fontSize: 22,\n    color: 'lightgray',\n    whiteSpace: 'nowrap',\n  },\n}))\n\ninterface DividerProps {\n  readonly text: string\n}\n\nconst Divider = ({ text }: DividerProps) => {\n  const classes = useDividerStyles()\n  return (\n    <div className={classes.container}>\n      <div className={classes.border} />\n      <span className={classes.content}>{text}</span>\n      <div className={classes.border} />\n    </div>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport * as React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    width: '100%',\n    height: '100%',\n    alignItems: 'start',\n    justifyItems: 'center',\n  },\n})\n\nexport const NotEnoughData = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <Typography variant={'body1'} align={'center'}>\n        {'Please add at least two cycle start dates (via '}\n        <i>{'Data'}</i>\n        {' tab)'}\n      </Typography>\n    </div>\n  )\n}\n","import { CycleStats as CycleStatsComponent } from '../components/CycleStats'\nimport * as React from 'react'\nimport { useState } from 'react'\nimport useInterval from '@use-it/interval'\nimport { useTypedSelector } from '../../store'\nimport { CycleHistory } from '../model'\nimport startOfToday from 'date-fns/startOfToday'\nimport { differenceInDays } from 'date-fns'\nimport { NotEnoughData } from '../components/NotEnoughData'\n\nexport const medianCycleLength = (durations: ReadonlyArray<number>) => {\n  const median = (values: ReadonlyArray<number>) => {\n    const mid = Math.floor(values.length / 2),\n      nums = [...values].sort((a, b) => a - b)\n    return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n  }\n  return median(durations)\n}\n\nexport const CycleStats = () => {\n  const [today, setToday] = useState<number>(startOfToday().valueOf())\n\n  useInterval(() => {\n    setToday(startOfToday().valueOf())\n  }, 1000 * 60)\n\n  const history = useTypedSelector<CycleHistory | undefined>((s) => s.cycle.history)\n  const userName = useTypedSelector<string>((s) => {\n    const authState = s.database.authState\n    return authState.type === 'logged-in' ? authState.user.username : ''\n  })\n  if (history && history.pastCycles.length > 0) {\n    const lastStartDate = history.currentCycle.startDate\n    const median = medianCycleLength(history.pastCycles.map((c) => c.duration))\n    const daysPast = differenceInDays(today, lastStartDate)\n    const day = Math.floor(daysPast) + 1 // start date is cycle day 1\n    return (\n      <CycleStatsComponent\n        userName={userName}\n        currentDay={day}\n        median={median}\n        lastStartDate={lastStartDate}\n        cycleHistory={history}\n      />\n    )\n  } else {\n    return <NotEnoughData />\n  }\n}\n","import { defaultThemeState } from '../theme'\nimport { RootState } from './model'\nimport { defaultCycleState } from '../cycle'\nimport { defaultDatabaseState, demoDatabaseState, isDemoMode } from '../db'\n\nexport const defaultRootState: RootState = {\n  database: isDemoMode ? demoDatabaseState : defaultDatabaseState(),\n  theme: defaultThemeState,\n  cycle: defaultCycleState,\n}\n","import { ThemeAction, themeReducer } from '../theme'\nimport { RootAction } from './actions'\nimport { RootState } from './model'\nimport { defaultRootState } from './default'\nimport { cycleReducer } from '../cycle'\nimport { CycleAction } from '../cycle'\nimport { DatabaseAction, dbReducer } from '../db'\n\nexport const rootReducer = (state: RootState = defaultRootState, action: RootAction): RootState => ({\n  database: dbReducer(state.database, action as DatabaseAction),\n  theme: themeReducer(state.theme, action as ThemeAction),\n  cycle: cycleReducer(state.cycle, action as CycleAction),\n})\n","import { createStore, Store, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { rootReducer } from './reducer'\nimport { RootState } from './model'\nimport { RootAction } from './actions'\nimport thunk from 'redux-thunk'\n\nexport const configureStore = (): Store<RootState, RootAction> => {\n  return createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { DatePicker, LocalizationProvider } from '@material-ui/pickers'\nimport { Button, Card, CardActions, CardContent, TextField } from '@material-ui/core'\nimport DateFnsAdapter from '@material-ui/pickers/adapter/date-fns'\nimport deLocale from 'date-fns/locale/de'\nimport startOfToday from 'date-fns/startOfToday'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  content: {\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n    width: '100%',\n  },\n  actions: {\n    display: 'grid',\n    justifyItems: 'end',\n  },\n})\n\ninterface Props {\n  readonly onAdd: (date: number) => void\n}\n\nexport const CycleAdd = ({ onAdd }: Props) => {\n  const classes = useStyles()\n  const [selectedDate, handleDateChange] = useState<number>(startOfToday().valueOf())\n  const [isValid, setValid] = useState<boolean>(true)\n\n  const onChange = (date: any) => date && handleDateChange((date as Date).valueOf())\n  const handleSubmit = () => onAdd(selectedDate)\n  const handleError = (e: any) => setValid(e === null)\n\n  return (\n    <Card className={classes.root} variant={'outlined'}>\n      <CardContent className={classes.content}>\n        <LocalizationProvider dateAdapter={DateFnsAdapter} locale={deLocale}>\n          <DatePicker\n            label=\"Cycle Start Date\"\n            value={selectedDate}\n            onChange={onChange}\n            onError={handleError}\n            renderInput={(props) => <TextField {...props} />}\n            mask={'__.__.____'}\n            disableFuture={true}\n            showTodayButton={true}\n            autoOk={true}\n          />\n        </LocalizationProvider>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button variant={'contained'} color=\"primary\" disabled={!isValid} onClick={handleSubmit}>\n          Add\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n","import React from 'react'\nimport { CycleHistory } from '../model'\nimport { IconButton, List, ListItemSecondaryAction, ListItemText } from '@material-ui/core'\nimport ListItem from '@material-ui/core/ListItem'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { CycleId } from '../../db'\nimport { CycleAdd } from './CycleAdd'\nimport { f } from '../utils'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'grid',\n    width: '100%',\n    justifyItems: 'center',\n  },\n  list: {\n    width: '100%',\n  },\n})\n\ninterface Props {\n  readonly cycleHistory?: CycleHistory\n  readonly onAdd: (date: number) => void\n  readonly onDelete: (id: CycleId) => void\n}\n\nexport const CycleData = ({ cycleHistory, onAdd, onDelete }: Props) => {\n  const classes = useStyles()\n  const cycles = cycleHistory ? [cycleHistory.currentCycle, ...cycleHistory.pastCycles] : []\n  return (\n    <div className={classes.root}>\n      <CycleAdd onAdd={onAdd} />\n      <List className={classes.list}>\n        {cycles.map((cycle) => {\n          return (\n            <ListItem key={cycle.id}>\n              <ListItemText>{f(cycle.startDate)}</ListItemText>\n              <ListItemSecondaryAction>\n                <IconButton edge={'end'} aria-label={'delete'} onClick={() => onDelete(cycle.id)}>\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          )\n        })}\n      </List>\n    </div>\n  )\n}\n","import React from 'react'\nimport { CycleData as CycleDataComponent } from '../components/CycleData'\nimport { useTypedSelector } from '../../store'\nimport { CycleHistory } from '../model'\nimport { useDispatch } from 'react-redux'\nimport { addStartDate, deleteStartDate, LoginState, CycleId } from '../../db'\n\ninterface Props {\n  readonly loginState: LoginState\n}\n\nexport const CycleData = ({ loginState }: Props) => {\n  const cycleHistory = useTypedSelector<CycleHistory | undefined>((s) => s.cycle.history)\n  const dispatch = useDispatch()\n  const onAdd = (date: number) => dispatch(addStartDate(date, loginState))\n  const onDelete = (id: CycleId) => dispatch(deleteStartDate(id, loginState))\n  return <CycleDataComponent cycleHistory={cycleHistory} onAdd={onAdd} onDelete={onDelete} />\n}\n","import React, { useState } from 'react'\nimport { Button, CircularProgress, TextField, Theme } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { LoginFormState } from '../model'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    width: '100%',\n    display: 'grid',\n    gridTemplateRows: 'auto auto auto',\n    gridRowGap: theme.spacing(2),\n  },\n  button: {\n    minHeight: 48,\n  },\n}))\n\ninterface Props {\n  readonly isSignUp: boolean\n  readonly state: LoginFormState\n  readonly onSubmit: (appId: string, username: string, password: string) => void\n}\n\nexport const LoginForm = ({ isSignUp, state, onSubmit }: Props) => {\n  const classes = useStyles()\n\n  const [appId, setAppId] = useState<string>(process.env.REACT_APP_USERBASE_APP_ID ?? '')\n  const [username, setUsername] = useState<string>(process.env.REACT_APP_USERBASE_USERNAME ?? '')\n  const [password, setPassword] = useState<string>(process.env.REACT_APP_USERBASE_PASSWORD ?? '')\n  const isSubmitted = state.type === 'login-form-submitted'\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    onSubmit(appId, username, password)\n  }\n\n  const isInvalidCredentials = state.type === 'login-form-error' && state.field === 'credentials'\n\n  return (\n    <form className={classes.root} noValidate={true} autoComplete=\"off\" onSubmit={handleSubmit}>\n      <TextField\n        id=\"appId\"\n        variant={'outlined'}\n        fullWidth={true}\n        label=\"App Id\"\n        type={'password'}\n        value={appId}\n        onChange={(event) => setAppId(event.target.value)}\n        disabled={isSubmitted}\n        error={state.type === 'login-form-error' && state.field === 'appId'}\n      />\n      <TextField\n        id=\"username\"\n        variant={'outlined'}\n        fullWidth={true}\n        label=\"Username\"\n        value={username}\n        onChange={(event) => setUsername(event.target.value)}\n        disabled={isSubmitted}\n        error={isInvalidCredentials}\n      />\n      <TextField\n        id=\"password\"\n        variant={'outlined'}\n        fullWidth={true}\n        label=\"Password\"\n        type={'password'}\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        disabled={isSubmitted}\n        error={isInvalidCredentials}\n      />\n      <Button\n        className={classes.button}\n        disabled={\n          isSubmitted || appId.trim().length === 0 || username.trim().length === 0 || password.trim().length === 0\n        }\n        type=\"submit\"\n        variant={'contained'}\n        color=\"primary\"\n      >\n        {isSubmitted ? <CircularProgress size={20} /> : isSignUp ? 'Sign Up' : 'Log In'}\n      </Button>\n    </form>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { LoginForm as LoginFormComponent } from '../components/LoginForm'\nimport { useDispatch } from 'react-redux'\nimport { loginFormError, loginFormSubmitted } from '../actions'\nimport { LoginFormState } from '../model'\nimport { signIn, signUp, userbase } from '../userbase'\nimport { isSignUp } from '../default'\n\ninterface Props {\n  readonly state: LoginFormState\n}\n\nexport const LoginForm = ({ state }: Props) => {\n  const [appId, setAppId] = useState<string>()\n  const [isDbInitialized, setDbInitialized] = useState<boolean>(false)\n  const [credentials, setCredentials] = useState<[string, string]>()\n\n  const dispatch = useDispatch()\n\n  const onSubmit = (appId: string, username: string, password: string) => {\n    setAppId(appId)\n    setCredentials([username, password])\n    dispatch(loginFormSubmitted())\n  }\n\n  useEffect(() => {\n    if (appId && !isDbInitialized) {\n      console.debug('Initializing DB...')\n      userbase\n        .init({ appId })\n        .then(() => {\n          console.debug('DB init successful')\n          setDbInitialized(true)\n        })\n        .catch((error) => {\n          console.debug('DB init failed: ' + error)\n          setDbInitialized(false)\n          dispatch(loginFormError('Invalid App Id', 'appId'))\n        })\n    }\n  }, [appId, isDbInitialized, setDbInitialized, dispatch])\n\n  useEffect(() => {\n    if (isDbInitialized && credentials) {\n      // Prevent already signed-in\n      userbase.signOut().catch(() => {\n        /* Ignore not-yet-signed-in */\n      })\n      const [username, password] = credentials\n\n      if (isSignUp) {\n        signUp(username, password).then((action) => dispatch(action))\n      } else {\n        signIn(username, password).then((action) => dispatch(action))\n      }\n    }\n  }, [isDbInitialized, credentials, dispatch])\n\n  return <LoginFormComponent isSignUp={isSignUp} state={state} onSubmit={onSubmit} />\n}\n","import * as React from 'react'\nimport SaveIcon from '@material-ui/icons/SaveAlt'\nimport { IconButton } from '@material-ui/core'\n\ninterface Props {\n  onClick: () => void\n}\n\nexport const ExportCycleData = ({ onClick }: Props) => (\n  <IconButton color=\"inherit\" onClick={onClick}>\n    <SaveIcon />\n  </IconButton>\n)\n","import * as React from 'react'\nimport { ExportCycleData as ExportCycleDataComponent } from '../components/ExportCycleData'\nimport { useTypedDispatch, useTypedSelector } from '../../store'\nimport { exportCycleData } from '../actions'\nimport { CycleIOData, CycleState } from '../model'\nimport { f } from '../utils'\n\nconst exportableData = (cycleState: CycleState): CycleIOData => {\n  const history = cycleState.history\n  const allCycles = history ? [history.currentCycle, ...history.pastCycles] : []\n  return {\n    history: {\n      startDates: allCycles.map((c) => f(c.startDate)),\n    },\n  }\n}\n\nexport const ExportCycleData = () => {\n  const cycleState = useTypedSelector<CycleState>((s) => s.cycle)\n  const dispatch = useTypedDispatch()\n  const onClick = () => {\n    const data = exportableData(cycleState)\n    dispatch(exportCycleData(data))\n  }\n  return <ExportCycleDataComponent onClick={onClick} />\n}\n","import { UPDATE_AUTH_STATE } from './actionTypes'\nimport { AuthState, LoginState, LoginFormState, CycleId, LoginFormField } from './model'\nimport { userbase, UserResult } from './userbase'\n\nexport type DatabaseAction = UpdateAuthStateAction\n\ninterface UpdateAuthStateAction {\n  type: typeof UPDATE_AUTH_STATE\n  authState: AuthState\n}\n\nconst updateAuthState = (authState: AuthState): UpdateAuthStateAction => ({\n  type: UPDATE_AUTH_STATE,\n  authState,\n})\n\nconst updateLoginForm = (state: LoginFormState) =>\n  updateAuthState({\n    type: 'login-form',\n    state,\n  })\n\nexport const dbInitFailed = (error: any) => updateAuthState({ type: 'db-init-failed', error })\n\nexport const showLoginForm = () => updateLoginForm({ type: 'login-form-idle' })\n\nexport const loginFormSubmitted = () => updateLoginForm({ type: 'login-form-submitted' })\n\nexport const loginFormError = (error: string, field: LoginFormField) =>\n  updateLoginForm({ type: 'login-form-error', field, error })\n\nexport const loginSuccessful = (user: UserResult) =>\n  updateAuthState({\n    type: 'logged-in',\n    user,\n    dataLoading: 'pending',\n  })\n\nexport const dataLoadingInProgress = (user: UserResult) =>\n  updateAuthState({\n    type: 'logged-in',\n    user,\n    dataLoading: 'in-progress',\n  })\n\nexport const dataLoadingDone = (user: UserResult) =>\n  updateAuthState({\n    type: 'logged-in',\n    user,\n    dataLoading: 'done',\n  })\n\nexport const cycleDatabaseName = (loginState: LoginState) => `${loginState.user.username}-cycles-v1`\n\nexport const addStartDate = (date: number, loginState: LoginState) => async () => {\n  const databaseName = cycleDatabaseName(loginState)\n  return userbase\n    .insertItem({\n      databaseName,\n      itemId: `${date}`,\n      item: date,\n    })\n    .then(() => console.log('DB insertItem successful'))\n    .catch((e) => {\n      console.error('DB insertItem failed ' + e)\n    })\n}\n\nexport const deleteStartDate = (id: CycleId, loginState: LoginState) => async () => {\n  const databaseName = cycleDatabaseName(loginState)\n  return userbase\n    .deleteItem({\n      databaseName,\n      itemId: id,\n    })\n    .then(() => console.log('DB deleteItem successful'))\n    .catch((e) => {\n      console.error('DB deleteItem failed ' + e)\n    })\n}\n","export * from './model'\nexport * from './store'\nexport * from './useTypedSelector'\nexport * from './useTypedDispatch'\n","import userbaseDB, { DatabaseChangeHandler, Item, Session, Userbase, UserResult } from 'userbase-js'\nimport { parse, differenceInDays, startOfToday, addDays } from 'date-fns'\nimport { DATE_FORMAT_IMPORT_EXPORT } from '../cycle/utils'\nimport { DatabaseAction, loginFormError, loginSuccessful } from './actions'\n\nexport type { Item, UserResult } from 'userbase-js'\n\ntype UserbaseProxy = Pick<\n  Userbase,\n  'init' | 'signUp' | 'signIn' | 'signOut' | 'openDatabase' | 'insertItem' | 'deleteItem'\n>\n\nexport const demoUser: UserResult = {\n  username: 'demo-User',\n  userId: 'demo-user-id',\n  authToken: 'demo-authToken',\n  creationDate: new Date(),\n  paymentsMode: 'test',\n}\n\nclass DemoUserbase implements UserbaseProxy {\n  private changeHandler?: DatabaseChangeHandler\n  private items: ReadonlyArray<Item> = []\n\n  constructor(items: ReadonlyArray<Item>) {\n    this.items = items\n  }\n\n  init(): Promise<Session> {\n    return Promise.resolve({})\n  }\n\n  signUp(): Promise<UserResult> {\n    return Promise.resolve(demoUser)\n  }\n\n  signIn(): Promise<UserResult> {\n    return Promise.resolve(demoUser)\n  }\n\n  signOut(): Promise<void> {\n    return Promise.resolve()\n  }\n\n  openDatabase(params: {\n    databaseName?: string\n    databaseId?: string\n    changeHandler: DatabaseChangeHandler\n  }): Promise<void> {\n    this.changeHandler = params.changeHandler\n    this.changeHandler([...this.items])\n    return Promise.resolve()\n  }\n\n  insertItem(params: { databaseName?: string; databaseId?: string; item: Item; itemId?: string }): Promise<void> {\n    if (this.items.find((i) => i.itemId === params.itemId)) {\n      // TODO: Reject duplicates (https://github.com/twenty-eight-days/twenty-eight-days/issues/23)\n      return Promise.resolve()\n    } else {\n      const newItems = [\n        ...this.items,\n        {\n          itemId: params.itemId ?? params.item.toString(),\n          item: params.item,\n        },\n      ]\n\n      if (this.changeHandler) {\n        this.changeHandler(newItems)\n      }\n      this.items = newItems\n      return Promise.resolve()\n    }\n  }\n\n  deleteItem(params: { databaseName?: string; databaseId?: string; itemId: string }): Promise<void> {\n    const newItems = this.items.filter((i) => i.itemId !== params.itemId)\n    if (this.changeHandler) {\n      this.changeHandler(newItems)\n    }\n    this.items = newItems\n    return Promise.resolve()\n  }\n}\n\nconst query = new URLSearchParams(window.location.search)\nexport const isDemoMode = query.has('demo')\n\nconst demoData = [\n  '05.01.2021',\n  '01.12.2020',\n  '12.11.2020',\n  '09.10.2020',\n  '07.09.2020',\n  '10.08.2020',\n  '11.07.2020',\n  '11.06.2020',\n  '05.05.2020',\n  '06.04.2020',\n  '01.03.2020',\n  '10.02.2020',\n  '15.01.2020',\n  '18.12.2019',\n  '20.11.2019',\n  '22.10.2019',\n]\n\nconst p = (demoDateString: string) => parse(demoDateString, DATE_FORMAT_IMPORT_EXPORT, new Date()).valueOf()\n\n// Auto-shift demo data to make sense today -> end up on day 9 of the cycle...\nconst demoDataCreationDate = p('13.01.2021')\nconst daysToAdd = differenceInDays(startOfToday(), demoDataCreationDate)\n\nexport const userbase: UserbaseProxy = isDemoMode\n  ? new DemoUserbase(\n      demoData\n        .map<number>((d) => {\n          const parsedDate = p(d)\n          return addDays(parsedDate, daysToAdd).valueOf()\n        })\n        .sort((d1, d2) => d2 - d1)\n        .map<Item>((startDate: number) => {\n          return {\n            itemId: `${startDate}`,\n            item: startDate,\n          }\n        })\n    )\n  : userbaseDB\n\nexport const signIn = (username: string, password: string): Promise<DatabaseAction> => {\n  console.debug('DB sign-in...')\n  return userbase\n    .signIn({\n      username,\n      password,\n    })\n    .then((user: UserResult) => {\n      console.debug('DB sign-in successful')\n      return loginSuccessful(user)\n    })\n    .catch((e: string) => {\n      console.debug('DB sign-in failed: ' + e)\n      if (e.toString().startsWith('AppIdNotValid')) {\n        return loginFormError('Invalid App Id', 'appId')\n      } else {\n        return loginFormError('Invalid Credentials', 'credentials')\n      }\n    })\n}\n\nexport const signUp = (username: string, password: string): Promise<DatabaseAction> => {\n  console.debug('DB sign-up...')\n  return userbase\n    .signUp({\n      username,\n      password,\n    })\n    .then((user: UserResult) => {\n      console.debug('DB sign-up successful')\n      return loginSuccessful(user)\n    })\n    .catch((e: string) => {\n      console.debug('DB sign-up failed: ' + e)\n      if (e.toString().startsWith('AppIdNotValid')) {\n        return loginFormError('Invalid App Id', 'appId')\n      } else {\n        return loginFormError('Invalid Credentials', 'credentials')\n      }\n    })\n}\n","export * from './model'\nexport * from './default'\nexport * from './actions'\nexport * from './reducer'\nexport * from './containers/DataProvider'\nexport * from './containers/LoginForm'\nexport { isDemoMode } from './userbase'\n","import { CircularProgress, Theme, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: 'grid',\n    width: '100%',\n    justifyItems: 'center',\n    marginTop: theme.spacing(1),\n    gridRowGap: theme.spacing(2),\n  },\n}))\n\ninterface Props {\n  readonly label: string\n}\n\nexport const Progress = ({ label }: Props) => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <CircularProgress size={100} />\n      <Typography variant={'body1'} align={'center'}>\n        {label}\n      </Typography>\n    </div>\n  )\n}\n","import { AuthState, LoginForm } from '../../db'\nimport { CycleData, CycleStats } from '../../cycle'\nimport React, { useState } from 'react'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport StatsIcon from '@material-ui/icons/TrendingUp'\nimport DataIcon from '@material-ui/icons/Event'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport { Progress } from './Progress'\n\nconst useStyles = makeStyles({\n  bottomNav: {\n    width: '100vw',\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n  },\n  progress: {\n    justifySelf: 'center',\n  },\n})\n\ntype Tab = 'stats' | 'data'\n\ninterface Props {\n  readonly authState: AuthState\n}\n\nexport const Main = ({ authState }: Props) => {\n  const classes = useStyles()\n  const [navTab, setNavTab] = useState<Tab>('stats')\n\n  switch (authState.type) {\n    case 'attempt-auto-login':\n      return <Progress label={'Signing in'} />\n    case 'login-form':\n      return <LoginForm state={authState.state} />\n    case 'logged-in':\n      if (authState.dataLoading !== 'done') {\n        return <Progress label={'Loading data'} />\n      } else {\n        return (\n          <div>\n            {navTab === 'stats' && <CycleStats />}\n            {navTab === 'data' && <CycleData loginState={authState} />}\n            <BottomNavigation\n              className={classes.bottomNav}\n              value={navTab}\n              onChange={(event, newValue) => {\n                setNavTab(newValue)\n              }}\n              showLabels={true}\n            >\n              <BottomNavigationAction label=\"Stats\" icon={<StatsIcon />} value={'stats'} />\n              <BottomNavigationAction label=\"Data\" icon={<DataIcon />} value={'data'} />\n            </BottomNavigation>\n          </div>\n        )\n      }\n    default:\n      return <div />\n  }\n}\n","import React from 'react'\nimport { Main as MainComponent } from '../components/Main'\nimport { useTypedSelector } from '../../store'\nimport { AuthState } from '../../db'\n\nexport const Main = () => {\n  const authState = useTypedSelector<AuthState>((s) => s.database.authState)\n  return <MainComponent authState={authState} />\n}\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { ThemeSwitch } from '../../theme'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport { ExportCycleData } from '../../cycle'\nimport { Theme, Typography } from '@material-ui/core'\nimport { Main } from '../containers/Main'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    height: 64, // fix vertical toolbar item offset in safari\n  },\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto auto', // center is position 'absolute'\n  },\n  toolbarLeft: {\n    height: '100%',\n    marginRight: 'auto', // push to the left\n    display: 'grid',\n    gridTemplateColumns: 'auto auto',\n    alignItems: 'center',\n  },\n  toolbarCenter: {\n    // position centered on page (rather than in flow of toolbar items)\n    position: 'absolute',\n    width: '100%',\n    display: 'grid',\n    pointerEvents: 'none',\n    [theme.breakpoints.down('sm')]: {\n      visibility: 'hidden',\n    },\n  },\n  title: {\n    justifySelf: 'center',\n    color: theme.palette.primary.contrastText,\n  },\n  toolbarRight: {\n    height: '100%',\n    marginLeft: 'auto', // push to the right\n    display: 'grid',\n    gridTemplateColumns: 'auto',\n    alignItems: 'center',\n  },\n  main: {\n    display: 'grid',\n    width: '100vw',\n    gridTemplateRows: 'auto 1fr auto',\n    gridRowGap: 8,\n    paddingTop: 100,\n    paddingBottom: 100,\n    paddingLeft: '20vw',\n    paddingRight: '20vw',\n    [theme.breakpoints.down('sm')]: {\n      paddingLeft: '5vw',\n      paddingRight: '5vw',\n    },\n  },\n  bottomNav: {\n    width: '100vw',\n    position: 'fixed',\n    bottom: 0,\n  },\n}))\n\nexport const App = () => {\n  const classes = useStyles()\n\n  return (\n    <div className=\"App\">\n      <AppBar className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n          <div className={classes.toolbarLeft}>\n            <ExportCycleData />\n          </div>\n          <div className={classes.toolbarCenter}>\n            <Typography\n              className={classes.title}\n              variant=\"h6\"\n            >{`${process.env.REACT_APP_NAME} v${process.env.REACT_APP_VERSION}`}</Typography>\n          </div>\n          <div className={classes.toolbarRight}>\n            <ThemeSwitch />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.main}>\n        <Main />\n      </div>\n    </div>\n  )\n}\n","import { App as AppComponent } from '../components/App'\nimport * as React from 'react'\nimport { CssBaseline, MuiThemeProvider as ThemeProvider, Theme } from '@material-ui/core'\nimport { useTypedSelector } from '../../store'\n\nexport const App = () => {\n  // This is the only place we need to access the theme via our own model\n  // From here on, it is safe and convenient to use the `useTheme` hook\n  const theme = useTypedSelector<Theme>((s) => s.theme)\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppComponent />\n    </ThemeProvider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app'\nimport { configureStore } from './store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport { DataProvider } from './db'\n\nconst store = configureStore()\n\nconst Root = () => (\n  <Provider store={store}>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n\nserviceWorker.register()\n","export * from './actions'\nexport * from './reducer'\nexport * from './model'\nexport * from './default'\nexport * from './containers/CycleStats'\nexport * from './containers/CycleData'\nexport * from './containers/ExportCycleData'\n","import format from 'date-fns/format'\nimport enLocale from 'date-fns/locale/en-US'\n\nexport const DATE_FORMAT_IMPORT_EXPORT = 'dd.MM.yyyy'\nconst DATE_FORMAT_WITH_WEEKDAY = 'EEEE, MMMM dd'\nconst DATE_FORMAT_WITHOUT_WEEKDAY = 'MMMM dd'\n\nexport const f = (date: number) => format(date, DATE_FORMAT_IMPORT_EXPORT)\n\nconst options = { locale: enLocale }\n\nexport const dateWithWeekDay = (date: number) => format(date, DATE_FORMAT_WITH_WEEKDAY, options)\nexport const dateWithoutWeekDay = (date: number) => format(date, DATE_FORMAT_WITHOUT_WEEKDAY, options)\n"],"sourceRoot":""}